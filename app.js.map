{"version":3,"sources":["app/application.js","app/scripts/Array.js","app/scripts/Graph.js","app/scripts/graphCyto.js","app/scripts/graphSigm.js","app/scripts/graphViva.js","app/scripts/worker.js"],"names":[],"mappingshJA;AAAA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhtjFA;AAAA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjEA;AAAA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAbA;AAAA;AAAA","file":"public/app.js","sourcesContent":["/* jshint node: true */\r\n/* global document, Worker */\r\n\"use strict\";\r\n\r\nvar $ = require('jquery'),\r\n  Graph = require('scripts/Graph'),\r\n  layout = {},\r\n  timer = {\r\n    last: new Date(),\r\n    obj: null\r\n  },\r\n  graph = new Graph();\r\n\r\nvar App = {\r\n  init: function init() {\r\n\r\n    switch ($(\"input[type='radio'][name='graph']:checked\").val()) {\r\n      case 'cyto':\r\n        layout = require('scripts/graphCyto');\r\n        break;\r\n      default:\r\n        layout = require('scripts/graphViva');\r\n    }\r\n\r\n    layout.init($('#cy'));\r\n    layout.test();\r\n\r\n    $(\"input[type='radio'][name='graph']\").change(function(e, a, b) {\r\n      layout.clear();\r\n      if (this.value == 'cyto') {\r\n        layout = require('scripts/graphCyto');\r\n      } else {\r\n        layout = require('scripts/graphViva');\r\n      }\r\n      layout.init($('#cy'));\r\n      layout.test();\r\n    });\r\n\r\n    var loader = new Worker('workers/dataloader.js'); // work(require('scripts/dataloader'));\r\n    loader.addEventListener('message', function(ev) {\r\n      if (ev.data.indexLoaded) {\r\n        //window.g = ev.data.graph;\r\n\r\n        $('#search').removeClass('bg-danger').on('input', function(e) {\r\n          var searchBoxValue = $(this).val();\r\n          var now = new Date();\r\n          if (now - timer.last < 150 && timer.obj) {\r\n            console.log(\"clearing last\");\r\n            clearTimeout(timer.obj);\r\n          }\r\n          timer.last = now;\r\n          if (searchBoxValue.split(\" \").filter(function(v){\r\n            return v.length<=2;\r\n          }).length === 0) {\r\n            timer.obj = setTimeout(function() {\r\n              loader.postMessage({ cmd: \"search\", text: searchBoxValue });\r\n              layout.clear();\r\n            }, 150);\r\n          } //else\r\n            //$('#results').html('');\r\n        });\r\n      } else if(ev.data.graph){\r\n        Object.keys(ev.data.graph).forEach(function(v){\r\n          if(ev.data.graph[v].children.length>0){\r\n            ev.data.graph[v].children.forEach(function(vv){\r\n              layout.addNodes({\r\n                id: v,\r\n                label: ev.data.graph[v].description\r\n              }, {\r\n                id: vv,\r\n                label: ev.data.graph[vv].description\r\n              });\r\n            });\r\n          }\r\n        });\r\n        layout.layout();\r\n      } else if (ev.data.results && ev.data.results.length>0) {\r\n        console.time('Display graph');\r\n\r\n\r\n        loader.postMessage({cmd: \"graph\", node: ev.data.results[0].code});\r\n\r\n        /*ev.data.results.forEach(function(v) {\r\n          graph.addNode(v.code);\r\n          graph.addNode(v.parent);\r\n\r\n          //if (meta.excludedCodes) {\r\n          //  if (meta.excludedCodes.indexOf(v.code) > -1) graph.prop(v.code, \"include\", false);\r\n          //  if (meta.excludedCodes.indexOf(v.parent) > -1) graph.prop(v.parent, \"include\", false);\r\n          //}\r\n          //if (meta.includedCodes) {\r\n          //  if (meta.includedCodes.indexOf(v.code) > -1) graph.prop(v.code, \"include\", true);\r\n          //  if (meta.includedCodes.indexOf(v.parent) > -1) graph.prop(v.parent, \"include\", true);\r\n          //}\r\n\r\n          graph.prop(v.code, \"match\", true);\r\n\r\n          if (graph.prop(v.code, \"description\").indexOf(v.description) === -1) graph.prop(v.code, \"description\").push(v.description);\r\n          if (graph.prop(v.parent, \"description\").indexOf(v.parentDescription) === -1) graph.prop(v.parent, \"description\").push(v.parentDescription);\r\n\r\n          if (graph.prop(v.parent, \"children\").indexOf(v.code) === -1) graph.prop(v.parent, \"children\").push(v.code);\r\n          if (graph.prop(v.code, \"parent\").indexOf(v.parent) === -1) graph.prop(v.code, \"parent\").push(v.parent);\r\n\r\n          //adds A->B\r\n          layout.addNodes({\r\n            id: v.parent,\r\n            label: v.description\r\n          }, {\r\n            id: v.code,\r\n            label: v.description\r\n          });\r\n\r\n        });*/\r\n        //layout.layout();\r\n        console.timeEnd('Display graph');\r\n\r\n        console.time('Display results');\r\n\r\n        $('#results').html('');\r\n        ev.data.results.forEach(function(v) {\r\n          $('#results').append(\"<div>\" + v.code + \": \" + v.description + \"</div>\");\r\n        });\r\n\r\n        console.timeEnd('Display results');\r\n      } else if (ev.data.progress) {\r\n        //console.log(ev.data);\r\n        if (ev.data.file) {\r\n          var n = Math.floor(ev.data.progress / 2);\r\n          if (ev.data.progress < 100) {\r\n            $('#progress').html('<span class=\"progress\">' + new Array(n).join('<span class=\"loaded\">█</span>') + new Array(51 - n).join('<span class=\"loading\">█</span>') + '</span> - ' + ev.data.file + ' - LOADING...');\r\n          } else {\r\n            $('#progress').html('<span class=\"progress\">' + new Array(n).join('<span class=\"loaded\">█</span>') + new Array(51 - n).join('<span class=\"loading\">█</span>') + '</span> - ' + ev.data.file + ' - COMPLETED');\r\n          }\r\n        }\r\n      } else {\r\n        console.log(ev.data);\r\n      }\r\n    });\r\n\r\n    loader.postMessage({ cmd: \"load\", url: document.URL }); // send the worker a message\r\n  }\r\n};\r\n\r\nmodule.exports = App;\r\n","/* jshint node: true */\r\n\"use strict\";\r\n\r\n//Polyfill the array check for IE<9\r\nvar addIsArray = function(){\r\n  Array.isArray = function(arg) {\r\n    return Object.prototype.toString.call(arg) === '[object Array]';\r\n  };\r\n};\r\nif (!Array.isArray) {\r\n  addIsArray();\r\n}\r\n\r\nmodule.exports = {\r\n  addIsArray : addIsArray\r\n};\r\n","/* jshint node: true */\r\n\"use strict\";\r\n\r\nrequire(\"./Array\");\r\n\r\nvar Graph = function() {\r\n  this.graph = {};\r\n\r\n  this.nodes = function() {\r\n    return Object.keys(this.graph);\r\n  };\r\n\r\n  this.hasNode = function(node) {\r\n    return this.nodes().indexOf(node) > -1;\r\n  };\r\n\r\n  this.addNode = function(nodeName, node) {\r\n    //Add node to graph if not already exists\r\n    if (!this.hasNode(nodeName)) {\r\n      if (node) {\r\n        //adding an existing node\r\n        this.graph[nodeName] = node;\r\n      } else {\r\n        //adding a new node\r\n        this.graph[nodeName] = {\r\n          description: [],\r\n          children: [],\r\n          parent: []\r\n        };\r\n      }\r\n    }\r\n  };\r\n\r\n  this.prop = function(node, prop, value) {\r\n    if (this.hasNode(node)) {\r\n      if (value === undefined) {\r\n        return this.graph[node][prop];\r\n      } else {\r\n        this.graph[node][prop] = value;\r\n      }\r\n    }\r\n  };\r\n\r\n  this.propDelete = function(node, prop) {\r\n    if (this.hasNode(node)) {\r\n      delete this.graph[node][prop];\r\n    }\r\n  };\r\n\r\n  this.node = function(nodeName) {\r\n    return this.graph[nodeName];\r\n  };\r\n\r\n  this.merge = function(graphs) {\r\n    var self = this;\r\n    if (!Array.isArray(graphs)) {\r\n      graphs = [graphs];\r\n    }\r\n    graphs.forEach(function(graph) {\r\n      graph.nodes().forEach(function(node) {\r\n        self.addNode(node, graph.node(node));\r\n      });\r\n    });\r\n  };\r\n\r\n  this.included = function() {\r\n    var self = this;\r\n    return [].concat(this.nodes().filter(function(node) {\r\n      return self.node(node).include;\r\n    }));\r\n  };\r\n\r\n  this.excluded = function() {\r\n    var self = this;\r\n    return [].concat(this.nodes().filter(function(node) {\r\n      return !self.node(node).include;\r\n    }));\r\n  };\r\n\r\n  // For a graph G we return an array of connected subgraphs\r\n  this.connectedSubgraphs = function() {\r\n    var i, j, u, v, rtn = [],\r\n      Q = [],\r\n      G = this;\r\n\r\n    G.nodes().forEach(function(node) {\r\n      G.prop(node, \"unvisited\", true);\r\n    });\r\n\r\n    G.nodes().forEach(function(node) {\r\n      if (!G.prop(node, \"unvisited\")) return;\r\n\r\n      var subGraph = new Graph();\r\n      Q.push(node);\r\n\r\n      while (Q.length > 0) {\r\n        u = Q.splice(0, 1)[0];\r\n        subGraph.addNode(u, G.node(u));\r\n        var edges = G.prop(u, \"children\").concat(G.prop(u, \"parent\"));\r\n        for (i = 0; i < edges.length; i += 1) {\r\n          v = edges[i];\r\n          if (G.prop(v, \"unvisited\")) {\r\n            G.propDelete(v, \"unvisited\");\r\n            Q.push(v);\r\n          }\r\n        }\r\n      }\r\n      rtn.push(subGraph);\r\n    });\r\n\r\n    return rtn;\r\n  };\r\n\r\n  //dfs on tree to output all children\r\n  this.getDescendents = function(v) {\r\n    var i, j, u, status,\r\n      rtn = [],\r\n      G = this,\r\n      Q = [].concat(G.prop(v, \"children\"));\r\n\r\n    G.nodes().forEach(function(node) {\r\n      G.prop(node, \"unvisited\", true);\r\n    });\r\n\r\n    while (Q.length > 0) {\r\n      u = Q.splice(0, 1)[0];\r\n\r\n      if (!G.prop(u, \"unvisited\")) continue;\r\n      G.propDelete(u, \"unvisited\");\r\n\r\n      rtn.push(u);\r\n\r\n      for (i = G.prop(u, \"children\").length - 1; i >= 0; i -= 1) {\r\n        v = G.prop(u, \"children\")[i];\r\n        if (G.prop(v, \"unvisited\")) {\r\n          Q.unshift(v);\r\n        }\r\n      }\r\n    }\r\n    return rtn;\r\n  };\r\n\r\n  this.displayChildrenInTree = function(v) {\r\n    //dfs on tree to output all children\r\n    var i, j, u, status, G = this,\r\n      Q = [].concat(G.prop(v, \"children\"));\r\n    G.nodes().forEach(function(node) {\r\n      G.prop(node, \"unvisited\", true);\r\n    });\r\n\r\n    while (Q.length > 0) {\r\n      u = Q.splice(0, 1)[0];\r\n\r\n      if (!G.prop(u, \"unvisited\")) continue;\r\n      G.propDelete(u, \"unvisited\");\r\n\r\n      status = \"\";\r\n      if (G.prop(u, \"include\")) status = \"  INCLUDED\".cyan;\r\n      if (G.prop(u, \"include\") === false) status = \"  REJECTED\".red;\r\n      console.log(new Array(G.prop(u, \"depth\") * 3).join(\" \") + \"+-- \".white + \"CHILD: \".yellow + u + \"-\" + G.prop(u, \"description\").join(\" | \").yellow + status);\r\n\r\n      var edges = G.prop(u, \"children\");\r\n      for (i = edges.length - 1; i >= 0; i -= 1) {\r\n        v = edges[i];\r\n        if (G.prop(v, \"unvisited\")) {\r\n          Q.unshift(v);\r\n        }\r\n      }\r\n    }\r\n\r\n    return;\r\n  };\r\n\r\n  this.addDepth = function() {\r\n    var i, j, u, v, Q = [],\r\n      G = this;\r\n\r\n    G.nodes().forEach(function(node) {\r\n      G.prop(node, \"visited\", 0);\r\n      G.prop(node, \"depth\", 0);\r\n    });\r\n\r\n    G.nodes().forEach(function(node) {\r\n      if (G.prop(node, \"visited\") || G.prop(node, \"parent\").length > 0) return;\r\n\r\n      Q.push(node);\r\n\r\n      while (Q.length > 0) {\r\n        u = Q.splice(0, 1)[0];\r\n        var edges = G.prop(u, \"children\");\r\n        for (i = 0; i < edges.length; i += 1) {\r\n          v = edges[i];\r\n          if (G.prop(v, \"visited\") < G.prop(v, \"parent\").length - 1) {\r\n            G.prop(v, \"visited\", G.prop(v, \"visited\") + 1);\r\n          } else if (G.prop(v, \"visited\") === G.prop(v, \"parent\").length - 1) {\r\n            G.propDelete(v, \"visited\");\r\n            G.prop(v, \"depth\", G.prop(u, \"depth\") + 1);\r\n            Q.push(v);\r\n          }\r\n        }\r\n      }\r\n    });\r\n\r\n    return G;\r\n  };\r\n};\r\n\r\nGraph.merge = function(graphs) {\r\n  var g = new Graph();\r\n  g.merge(graphs);\r\n  return g;\r\n};\r\n\r\nmodule.exports = Graph;\r\n","var cytoscape = require('cytoscape'),\r\n  cytoqtip = require('cytoscape-qtip'),\r\n  cytdagre = require('cytoscape-dagre'),\r\n  dagre = require('dagre'),\r\n  panzoom = require('cytoscape-panzoom'),\r\n  jquery = require('jquery');\r\n\r\nwindow.jQuery = jquery;\r\nvar qtip = require('qtip2');\r\n\r\n// register extensions\r\ncytoscape.registerJquery(jquery);\r\npanzoom(cytoscape, jquery);\r\ncytoqtip(cytoscape, jquery);\r\ncytdagre(cytoscape, dagre);\r\n\r\nvar gc = {\r\n\r\n  init: function(el) {\r\n    el.html(\"\");\r\n\r\n    gc.cy = cytoscape({\r\n\r\n      container: el, // container to render in\r\n      boxSelectionEnabled: false,\r\n      autounselectify: true,\r\n      style: [ // the stylesheet for the graph\r\n        {\r\n          selector: 'node',\r\n          style: {\r\n            'background-color': 'red',\r\n            'label': 'data(label)',\r\n            'content': 'data(label)'\r\n          }\r\n        },\r\n\r\n        {\r\n          selector: 'edge',\r\n          style: {\r\n            'width': 4,\r\n            'target-arrow-shape': 'triangle',\r\n            'line-color': '#9dbaea',\r\n            'target-arrow-color': '#9dbaea'\r\n          }\r\n\t\t\t\t}\r\n\r\n      ],\r\n      wheelSensitivity: 0.3\r\n\r\n    });\r\n\r\n\r\n  },\r\n\r\n  test: function() {\r\n    gc.cy.add([\r\n      { group: \"nodes\", data: { weight: 75, id: \"n1\", label: \"Terminology graph\" } },\r\n      { group: \"nodes\", data: { weight: 75, id: \"n2\", label: \"will appear here\" } },\r\n      { group: \"edges\", data: { source: \"n1\", target: \"n2\" } }\r\n    ]);\r\n    gc.layout();\r\n  },\r\n\r\n  clear: function() {\r\n    gc.cy.off('click', 'node');\r\n    gc.cy.remove(gc.cy.elements(\"[weight!=50]\"));\r\n  },\r\n\r\n  addNodes: function(A, B) {\r\n    gc.cy.add([\r\n      { group: \"nodes\", data: { weight: 75, id: A.id, label: A.label } },\r\n      { group: \"nodes\", data: { weight: 75, id: B.id, label: B.label } },\r\n      { group: \"edges\", data: { source: A.id, target: B.id } }\r\n    ]);\r\n  },\r\n\r\n  layout: function() {\r\n    //cy.layout({name:'cose'});\r\n    gc.cy.layout({ name: 'dagre', nodeSep: 5, rankDir: 'LR' }).panzoom();\r\n\r\n    gc.cy.off('click', 'node');\r\n    gc.cy.on('click', 'node', function(event) {\r\n      var node = event.cyTarget;\r\n      console.log(event);\r\n      node.qtip({\r\n        content: node.data('label'),\r\n        position: {\r\n          my: 'top center',\r\n          at: 'bottom center',\r\n          target: node\r\n        },\r\n        style: {\r\n          classes: 'qtip-bootstrap',\r\n          tip: {\r\n            width: 16,\r\n            height: 8\r\n          }\r\n        },\r\n        hide: {\r\n          event: 'unfocus'\r\n        }\r\n      }, event);\r\n    });\r\n\r\n  }\r\n\r\n};\r\n\r\nmodule.exports = gc;\r\n","var sigma = require('sigma');\r\n\r\nvar sg = {\r\n\r\n  init: function(el) {\r\n    el.html(\"\");\r\n    el.removeAttr(\"style\");\r\n    sg.s = new sigma({ container: el });\r\n  },\r\n\r\n  clear: function() {\r\n    sg.s.graph.clear();\r\n  },\r\n\r\n  test: function() {\r\n    // Then, let's add some data to display:\r\n    sg.s.graph.addNode({\r\n      // Main attributes:\r\n      id: 'n0',\r\n      label: 'Hello',\r\n      // Display attributes:\r\n      size: 10,\r\n      color: '#f00'\r\n    }).addNode({\r\n      // Main attributes:\r\n      id: 'n1',\r\n      label: 'World !',\r\n      // Display attributes:\r\n      size: 10,\r\n      color: '#00f'\r\n    }).addEdge({\r\n      id: 'e0',\r\n      // Reference extremities:\r\n      source: 'n0',\r\n      target: 'n1'\r\n    });\r\n    console.log(sg.s.graph.nodes(), sg.s.graph.edges());\r\n    // Finally, let's ask our sigma instance to refresh:\r\n    sg.s.refresh();\r\n  },\r\n\r\n  addNodes: function(A, B) {\r\n    if (!sg.s.graph.nodes(A.id)) {\r\n      sg.s.graph.addNode({\r\n        // Main attributes:\r\n        id: A.id,\r\n        label: 'Hello',\r\n        // Display attributes:\r\n        x: 0,\r\n        y: 0,\r\n        size: 1,\r\n        color: '#f00'\r\n      });\r\n    }\r\n    if (!sg.s.graph.nodes(B.id)) {\r\n      sg.s.graph.addNode({\r\n        // Main attributes:\r\n        id: B.id,\r\n        label: 'Hello',\r\n        // Display attributes:\r\n        x: 0,\r\n        y: 0,\r\n        size: 1,\r\n        color: '#f00'\r\n      });\r\n    }\r\n    sg.s.graph.addEdge({\r\n      id: A.id + '-' + B.id,\r\n      // Reference extremities:\r\n      source: A.id,\r\n      target: B.id\r\n    });\r\n  },\r\n\r\n  layout: function() {\r\n    sg.s.refresh();\r\n  }\r\n\r\n};\r\n\r\nmodule.exports = sg;\r\n","var Viva = require('vivagraphjs');\r\n\r\n\r\n\r\nvar gv = {\r\n\r\n  init: function(el) {\r\n    el.html(\"\");\r\n    \r\n    gv.g = Viva.Graph.graph();\r\n    var nodeSize = 10;\r\n    var graphics = Viva.Graph.View.svgGraphics();\r\n    graphics.node(function(node) {\r\n        var ui = Viva.Graph.svg('g'),\r\n\r\n          svgText = Viva.Graph.svg('text').attr('y', '-15px').attr('x', '-' + (nodeSize / 4) + 'px').text(node.data ? node.data.label : \"label\");\r\n\r\n        titleTXT = Viva.Graph.svg('text').attr('y', '-3px').attr('x', '-' + (nodeSize / 4) + 'px').text(node.id)\r\n          .attr('fill', '#2CA1F4');\r\n\r\n        img = Viva.Graph.svg('rect').attr('width', nodeSize).attr('height', nodeSize).attr('fill', '#1A8CE1');\r\n\r\n\r\n        ui.append(svgText);\r\n        ui.append(titleTXT);\r\n        ui.append(img);\r\n\r\n        /*$(ui).dblclick(function(e) {\r\n          window.open(node.data.anchor, '_blank');\r\n        });*/\r\n\r\n        return ui;\r\n      })\r\n      .placeNode(function(nodeUI, pos) {\r\n        nodeUI.attr('transform', 'translate(' + (pos.x - nodeSize / 2) + ',' + (pos.y - nodeSize / 2) + ')');\r\n      });\r\n\r\n    gv.r = Viva.Graph.View.renderer(gv.g, {\r\n      container: document.getElementById(el.attr(\"id\")),\r\n      graphics: graphics\r\n    });\r\n  },\r\n\r\n  test: function() {\r\n    gv.g.addLink(1, 2);\r\n    gv.r.run();\r\n  },\r\n\r\n  clear: function() {\r\n    gv.g.clear();\r\n  },\r\n\r\n  addNodes: function(A, B) {\r\n    gv.g.addNode(A.id, { label: A.label });\r\n    gv.g.addNode(B.id, { label: B.label });\r\n    gv.g.addLink(A.id, B.id);\r\n  },\r\n\r\n  layout: function() {\r\n    gv.r.run();\r\n  }\r\n\r\n};\r\n\r\nmodule.exports = gv;\r\n","module.exports = function (fn) {\r\n    var src = '('+fn+')(self)\\n\\n//# sourceMappingURL: name.js';\r\n\r\n    var URL = window.URL || window.webkitURL || window.mozURL || window.msURL;\r\n\r\n    var blob = new Blob([src], { type: 'text/javascript' });\r\n    var workerUrl = URL.createObjectURL(blob);\r\n    var worker = new Worker(workerUrl);\r\n    if (typeof URL.revokeObjectURL == \"function\") {\r\n      URL.revokeObjectURL(workerUrl);\r\n    }\r\n    return worker;\r\n};\r\n"]}