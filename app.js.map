{"version":3,"sources":["app/application.js","app/scripts/dataloader.js","app/scripts/worker.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA3DA;AAAA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA3HA;AAAA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAbA;AAAA;AAAA","file":"public/app.js","sourcesContent":["/* jshint node: true */\r\n/* global document, Worker */\r\n\"use strict\";\r\n\r\nvar $ = require('jquery');\r\n//var work = require('scripts/worker.js');\r\n\r\nvar timer = {\r\n  last: new Date(),\r\n  obj: null\r\n};\r\n\r\nvar App = {\r\n  init: function init() {\r\n\r\n    var loader = new Worker('workers/dataloader.js'); // work(require('scripts/dataloader'));\r\n    loader.addEventListener('message', function(ev) {\r\n      if (ev.data.indexLoaded) {\r\n        $('#search').on('input', function(e) {\r\n          var searchBoxBalue = $(this).val();\r\n          var now = new Date();\r\n          if (now - timer.last < 150 && timer.obj) {\r\n            console.log(\"clearing last\");\r\n            clearTimeout(timer.obj);\r\n          }\r\n          timer.last = now;\r\n          if (searchBoxBalue.length > 2) {\r\n            timer.obj = setTimeout(function() {\r\n              loader.postMessage({ cmd: \"search\", text: searchBoxBalue });\r\n            }, 150);\r\n          } else\r\n            $('#results').html('');\r\n        });\r\n      } else if (ev.data.results) {\r\n        $('#results').html('');\r\n        ev.data.results.forEach(function(v) {\r\n          $('#results').append(\"<div>\" + v.code + \": \" + v.description + \"</div>\");\r\n        });\r\n        console.log(\"Num: \" + ev.data.results.length);\r\n      } else if (ev.data.progress) {\r\n        //console.log(ev.data);\r\n        if (ev.data.file) {\r\n          var n = Math.floor(ev.data.progress / 5);\r\n          if (ev.data.progress < 100) {\r\n            $('#progress').html('<span class=\"progress\">' + new Array(n).join('<span class=\"loaded\">█</span>') + new Array(21 - n).join('<span class=\"loading\">█</span>')+'</span> - ' + ev.data.file + ' - LOADING...');\r\n          } else {\r\n            $('#progress').html('<span class=\"progress\">' + new Array(n).join('<span class=\"loaded\">█</span>') + new Array(21 - n).join('<span class=\"loading\">█</span>')+'</span> - ' + ev.data.file + ' - COMPLETED');\r\n          }\r\n        }\r\n      } else {\r\n        console.log(ev.data);\r\n      }\r\n    });\r\n\r\n    loader.postMessage({ cmd: \"load\", url: document.URL }); // send the worker a message\r\n  }\r\n};\r\n\r\nmodule.exports = App;\r\n","module.exports = function(self, $) {\r\n\r\n  var updateProgress = function(e) {\r\n    if (e.lengthComputable) {\r\n      //evt.loaded the bytes browser receive\r\n      //evt.total the total bytes seted by the header\r\n      //\r\n      //var percentComplete = (evt.loaded / evt.total) * 100;\r\n      //$('#progressbar').progressbar(\"option\", \"value\", percentComplete);\r\n      self.postMessage({progress:e.loaded});\r\n    }\r\n  };\r\n\r\n  var loadJSON = function(url, callback) {\r\n    console.time(\"Loading: \" + url);\r\n    var xmlhttp = new XMLHttpRequest();\r\n    xmlhttp.onprogress = updateProgress;\r\n    xmlhttp.open('GET', url, true);\r\n    xmlhttp.onreadystatechange = function() {\r\n      if (xmlhttp.readyState == 4) {\r\n        console.timeEnd(\"Loading: \" + url);\r\n        if (xmlhttp.status == 200) {\r\n          try {\r\n            var obj = JSON.parse(xmlhttp.responseText);\r\n            return callback(null, obj);\r\n          } catch (e) {\r\n            return callback(e);\r\n          }\r\n        }\r\n      }\r\n    };\r\n    xmlhttp.send(null);\r\n  };\r\n\r\n  console.time(\"importing lunr.js\");\r\n  importScripts('https://cdnjs.cloudflare.com/ajax/libs/lunr.js/0.7.1/lunr.min.js');\r\n  console.timeEnd(\"importing lunr.js\");\r\n\r\n  self.loadIndex = function(url, callback) {\r\n    loadJSON(url + 'data/data_index.json', function(err, index) {\r\n      if (err) {\r\n        return callback(err);\r\n      } else {\r\n        console.time(\"loading index\");\r\n        self.index = lunr.Index.load(index);\r\n        console.timeEnd(\"loading index\");\r\n        return callback(null);\r\n      }\r\n    });\r\n  };\r\n\r\n  self.loadGraph = function(url, callback) {\r\n    console.time(\"loading graph\");\r\n    loadJSON(url + 'data/data_graph.json', function(err, graph) {\r\n      if (err) {\r\n        return callback(err);\r\n      } else {\r\n        self.graph = graph;\r\n        return callback(null);\r\n      }\r\n    });\r\n  };\r\n\r\n  self.load = function(url, callback) {\r\n    self.loadGraph(url, function(err) {\r\n      if (err) return callback(err);\r\n      self.loadIndex(url, function(err) {\r\n        if (err) return callback(err);\r\n        return callback(null);\r\n      });\r\n    });\r\n  };\r\n\r\n  self.addEventListener('message', function(e) {\r\n    var data = e.data;\r\n    switch (data.cmd) {\r\n      case 'loadGraph':\r\n        self.postMessage('WORKER STARTED: ' + data.cmd);\r\n        self.loadGraph(data.url, function(err) {\r\n          if (err) {\r\n            self.postMessage('WORKER ERROR: ' + err);\r\n          } else {\r\n            self.postMessage('WORKER GRAPH LOADED');\r\n          }\r\n        });\r\n        break;\r\n      case 'loadIndex':\r\n        self.postMessage('WORKER STARTED: ' + data.cmd);\r\n        self.loadIndex(data.url, function(err) {\r\n          if (err) {\r\n            self.postMessage('WORKER ERROR: ' + err);\r\n          } else {\r\n            self.postMessage('WORKER INDEX LOADED');\r\n          }\r\n        });\r\n        break;\r\n      case 'load':\r\n        self.postMessage('WORKER STARTED: ' + data.cmd);\r\n        self.load(data.url, function(err, graph, index) {\r\n          if (err) {\r\n            self.postMessage('WORKER ERROR: ' + err);\r\n          } else {\r\n            self.postMessage({ indexLoaded: true });\r\n          }\r\n        });\r\n        break;\r\n      case 'search':\r\n        self.postMessage('WORKER STARTED: ' + data.cmd + ' - ' + data.text);\r\n        if (!self.index) {\r\n          self.postMessage('Index not ready');\r\n        } else {\r\n          self.postMessage({\r\n            results: self.index.search(data.text).map(function(v) {\r\n              return { code: v.ref, description: self.graph[v.ref].d };\r\n            })\r\n          });\r\n        }\r\n        break;\r\n      default:\r\n        self.postMessage('Unknown command: ' + data.msg);\r\n    }\r\n  });\r\n};\r\n","module.exports = function (fn) {\r\n    var src = '('+fn+')(self)\\n\\n//# sourceMappingURL: name.js';\r\n\r\n    var URL = window.URL || window.webkitURL || window.mozURL || window.msURL;\r\n\r\n    var blob = new Blob([src], { type: 'text/javascript' });\r\n    var workerUrl = URL.createObjectURL(blob);\r\n    var worker = new Worker(workerUrl);\r\n    if (typeof URL.revokeObjectURL == \"function\") {\r\n      URL.revokeObjectURL(workerUrl);\r\n    }\r\n    return worker;\r\n};\r\n"]}